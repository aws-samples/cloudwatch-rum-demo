AWSTemplateFormatVersion: '2010-09-09'
Description: "2 Tier Highly Available Application. Creates a HTTP Webserver on EC2 with ASG and ALB."

Parameters:   
  Environment:
    Description:    Please specify the target environment.
    Type:           String
    Default:        "prod"
    AllowedValues:
      - prod
      - staging
      - dev
      - qa
  VPC:
    #Type: List<AWS::EC2::VPC::Id>
    Type: AWS::EC2::VPC::Id
    Description: "Choose a VPC to launch your services in"

  PublicSubnet1:
      #Type: String (Put subnet id manually)
      #Type: List<AWS::EC2::Subnet::Id>
      Type: AWS::EC2::Subnet::Id
      Description: Choose a public subnet associated with desired AZ 

  PublicSubnet2:
      Type: AWS::EC2::Subnet::Id
      Description: Choose a public subnet associated with desired AZ

  PrivateSubnet1:
      Type: AWS::EC2::Subnet::Id
      Description: Choose a private subnet associated with desired AZ

  PrivateSubnet2:
      Type: AWS::EC2::Subnet::Id
      Description: Choose a private subnet associated with desired AZ


  # IpAddress:
  #     Description: Your IP Address with CIDR that will be used to SSH into instances
  #     Type: String

  Keypair:
      Type: AWS::EC2::KeyPair::KeyName
      Description: Choose a keypair to associate with instances to SSH in future
  DomainName: 
      Type: String

  ApplicationName:
      Type: String

  ALBType:
      Description:    AWS Load Balancer Type.
      Type:           String
      Default:        "application"
      AllowedValues:
        - application
        - network

  OriginProtocolPolicy:
    Description:    CloudFront Origin Protocol Policy to apply to your origin.
    Type:           String
    Default:        "http-only"
    AllowedValues:
      - http-only
      - match-viewer
      - https-only 

  Compress:
    Description:    CloudFront Origin Protocol Policy to apply to your origin.
    Type:           String
    Default:        "true"
    AllowedValues:
      - true
      - false

  DefaultTTL:
    Description:    The default time in seconds that objects stay in CloudFront caches before CloudFront forwards another request to your custom origin. By default, AWS CloudFormation specifies 86400 seconds (one day).
    Type:           String
    Default:        "86400"

  MaxTTL:
    Description:    The maximum time in seconds that objects stay in CloudFront caches before CloudFront forwards another request to your custom origin. By default, AWS CloudFormation specifies 31536000 seconds (one year).
    Type:           String
    Default:        "31536000"

  MinTTL:
    Description:    The minimum amount of time that you want objects to stay in the cache before CloudFront queries your origin to see whether the object has been updated.
    Type:           String
    Default:        "300"

  SmoothStreaming:
    Description:    Indicates whether to use the origin that is associated with this cache behavior to distribute media files in the Microsoft Smooth Streaming format.
    Type:           String
    Default:        "false"
    AllowedValues:
      - true
      - false

  QueryString:
    Description:    CIndicates whether you want CloudFront to forward query strings to the origin that is associated with this cache behavior.
    Type:           String
    Default:        "true"
    AllowedValues:
      - true
      - false

  ForwardCookies:
    Description:    Forwards specified cookies to the origin of the cache behavior.
    Type:           String
    Default:        "all"
    AllowedValues:
      - all
      - whitelist
      - none

  ViewerProtocolPolicy:
    Description:    The protocol that users can use to access the files in the origin that you specified in the TargetOriginId property when the default cache behavior is applied to a request.
    Type:           String
    Default:        "allow-all"
    AllowedValues:
      - redirect-to-https
      - allow-all
      - https-only

  PriceClass:
    Description:    The price class that corresponds with the maximum price that you want to pay for CloudFront service. If you specify PriceClass_All, CloudFront responds to requests for your objects from all CloudFront edge locations.
    Type:           String
    Default:        "PriceClass_All"
    AllowedValues:
      - PriceClass_All
      - PriceClass_100
      - PriceClass_200

  # SslSupportMethod:
  #   Description:    Specifies how CloudFront serves HTTPS requests.
  #   Type:           String
  #   Default:        "vip"
  #   AllowedValues:
  #     - sni-only
  #     - vip

  # MinimumProtocolVersion:
  #   Description:    The minimum version of the SSL protocol that you want CloudFront to use for HTTPS connections.
  #   Type:           String
  #   Default:        "TLSv1.2_2018"
  #   AllowedValues:
  #     - TLSv1
  #     - TLSv1.2_2018
  #     - TLSv1.1_2016
  #     - TLSv1_2016
  #     - SSLv3

  OriginKeepaliveTimeout:
    Description:    You can create a custom keep-alive timeout. All timeout units are in seconds. The default keep-alive timeout is 5 seconds, but you can configure custom timeout lengths. The minimum timeout length is 1 second; the maximum is 60 seconds.
    Type:           String
    Default:        "60"

  OriginReadTimeout:
    Description:    You can create a custom origin read timeout. All timeout units are in seconds. The default origin read timeout is 30 seconds, but you can configure custom timeout lengths. The minimum timeout length is 4 seconds; the maximum is 60 seconds.
    Type:           String
    Default:        "30"

  ALBScheme:
    Description:    Origin ALB scheme.
    Type:           String
    Default:        "internet-facing"
    AllowedValues:
      - internet-facing
      - internal

  ALBTargetGroupHealthCheckIntervalSeconds:
    Description:    Origin ALB Target Group Health Check Interval in Seconds.
    Type:           String
    Default:        "30"

  ALBTargetGroupHealthCheckTimeoutSeconds:
    Description:    Origin ALB Target Group Health Check Timeout in Seconds.
    Type:           String
    Default:        "5"

  ALBTargetGroupHealthyThresholdCount:
    Description:    Origin ALB Target Group Healthy Threshold Count.
    Type:           String
    Default:        "5"

  ALBTargetGroupUnhealthyThresholdCount:
    Description:    Origin ALB Target Group Unhealthy Threshold Count.
    Type:           String
    Default:        "2"

  ALBAttributeIdleTimeOut:
    Description:    Origin ALB Target Group Unhealthy Threshold Count.
    Type:           String
    Default:        "60"

  ALBAttributeDeletionProtection:
    Description:    Origin ALB Target Group Unhealthy Threshold Count.
    Type:           String
    Default:        "false"
    AllowedValues:
      - true
      - false

  ALBAttributeRoutingHttp2:
    Description:    Origin ALB Target Group Unhealthy Threshold Count.
    Type:           String
    Default:        "true"
    AllowedValues:
      - true
      - false

  ALBTargetGroupAttributeDeregistration:
    Description:    Origin ALB Target Group Deregistration Timeout.
    Type:           String
    Default:        "300"

  HealthCheckProtocol:
    Description:    Origin ALB Target Group Health Check Protocol.
    Type:           String
    Default:        "HTTP"
    AllowedValues:
      - HTTPS
      - HTTP

  HealthCheckPath:
    Description:    Origin ALB Target Group Health Check Path.
    Type:           String
    Default:        "/"


  LoggingBucketVersioning:
    Description:    The versioning state of an Amazon S3 bucket. If you enable versioning, you must suspend versioning to disable it.
    Type:           String
    Default:        "Suspended"
    AllowedValues:
      - Enabled
      - Suspended
  # ACMCertificateIdentifier:
  #   Description:    The AWS Certificate Manager (ACM) certificate identifier.
  #   Type:           String
  #   Default:        "1234567890abcdefgh"

Resources:
# IAM ROLE USED FOR LOGGING KMS KEY ACCESS
  AdministratorAccessIAMRole:
    Type: 'AWS::IAM::Role'
    Description: "Administrator Access IAM Role"
    Properties:
      RoleName: !Sub "AdministratorAccess-${ApplicationName}"
      ManagedPolicyArns:
        - !Sub "arn:aws:iam::aws:policy/AdministratorAccess"
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: '/'
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: HTTP/S
      GroupDescription: Allow Inbound HTTP and HTTPS traffic and SSH from my IP.
      VpcId: !Ref VPC
      SecurityGroupIngress:
        -
          IpProtocol: "tcp"
          FromPort: 80
          ToPort: 80
          CidrIp: "0.0.0.0/0"
        -
          IpProtocol: "tcp"
          FromPort: 443
          ToPort: 443
          CidrIp: "0.0.0.0/0"

        #SSH from my IP
          #-
            # IpProtocol: "tcp"
            # FromPort: "22"
            # ToPort: "22"
            # #CidrIp: !Ref IpAddress
# KMS KEY USED FOR LOGGING S3 BUCKET
  LoggingBucketKMSKey:
    Type: 'AWS::KMS::Key' 
    DependsOn: AdministratorAccessIAMRole
    Properties:
      Description: 'Logging S3 Bucket KMS Key'
      Enabled: true
      EnableKeyRotation: true
      KeyPolicy:
        Version: '2012-10-17'
        Statement:
          - Sid: Enable IAM policies to allow access to the Key
            Effect: Allow
            Principal:
              AWS: !Sub 'arn:aws:iam::${AWS::AccountId}:root'
            Action:
              - 'kms:*'
            Resource: '*'
          - Sid: Allow administration of the key
            Effect: Allow
            Principal:
              AWS:
                - !Sub 'arn:aws:iam::${AWS::AccountId}:role/AdministratorAccess-${ApplicationName}'
            Action:
              - 'kms:Put*'
              - 'kms:ScheduleKeyDeletion'
              - 'kms:CancelKeyDeletion'
              - 'kms:Describe*'
              - 'kms:Revoke*'
              - 'kms:Disable*'
              - 'kms:Enable*'
              - 'kms:Delete*'
              - 'kms:List*'
              - 'kms:Update*'
              - 'kms:Create*'
            Resource: '*'
# KMS KEY ALIAS USED FOR LOGGING BUCKET
  LoggingBucketKMSKeyAlias:
    Type: 'AWS::KMS::Alias' 
    Properties:
        AliasName: !Sub 'alias/${ApplicationName}/${Environment}/s3-logging-kms'
        TargetKeyId: !Sub '${LoggingBucketKMSKey}'

# LOGGING S3 BUCKET
  LoggingBucket:
    Type: 'AWS::S3::Bucket'
    DeletionPolicy: 'Retain'
    DependsOn: LoggingBucketKMSKey
    Properties:
      BucketName: !Sub '${ApplicationName}-logging-${Environment}-${AWS::AccountId}-${AWS::Region}'
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              KMSMasterKeyID: !GetAtt 'LoggingBucketKMSKey.Arn'
              SSEAlgorithm: 'aws:kms'
      VersioningConfiguration:
        Status: !Ref 'LoggingBucketVersioning'

# LOGGING S3 BUCKET POLICY
  LoggingBucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref 'LoggingBucket'
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: LoggingBucketPermissions
            Effect: 'Allow'
            Principal:
              AWS: !Sub 'arn:aws:iam::${AWS::AccountId}:root'
            Action: 's3:PutObject'
            Resource:
              - !Sub 'arn:aws:s3:::${LoggingBucket}/AWSLogs/${AWS::AccountId}/*'
  # ORIGIN ALB
  OriginALB:
    Type: 'AWS::ElasticLoadBalancingV2::LoadBalancer'
    Properties:
      Name: "CWRUM-Application-Load-Balancer"
      Scheme: !Ref 'ALBScheme'
      Type:  !Ref "ALBType"
      LoadBalancerAttributes:
        - Key: idle_timeout.timeout_seconds
          Value: !Ref 'ALBAttributeIdleTimeOut'
        - Key: deletion_protection.enabled
          Value: !Ref 'ALBAttributeDeletionProtection'
        - Key: routing.http2.enabled
          Value: !Ref 'ALBAttributeRoutingHttp2'
    
      Subnets:
          - !Ref PublicSubnet1
          - !Ref PublicSubnet2
      SecurityGroups:
          - !Ref SecurityGroup
            #- !GetAtt SecurityGroup.GroupId
      IpAddressType: "ipv4"


  # HTTPSListener:
  #     Type: AWS::ElasticLoadBalancingV2::Listener
  #     Properties:
  #         LoadBalancerArn: !Ref ALB
  #         Port: 443
  #         Protocol: "HTTPS"
  #         SslPolicy: "ELBSecurityPolicy-2016-08"
  #         Certificates:
  #           -
  #          CertificateArn: arn:aws:acm:us-east-1:**************:certificate*********************

  #         DefaultActions:
  #           -
  #             Order: 1
  #             TargetGroupArn: !Ref TargetGroup1
  #             Type: "forward"

  HTTPListener:
      Type: AWS::ElasticLoadBalancingV2::Listener
      Properties:
          LoadBalancerArn: !Ref OriginALB
          Protocol: "HTTP"
          Port: 80
          DefaultActions:
            -
              Order: 1
              TargetGroupArn: !Ref TargetGroup1
              Type: "forward"

              # RedirectConfig:
              #     Protocol: "HTTPS"
              #     Port: "443"
              #     Host: "#{host}"
              #     Path: "/#{path}"
              #     Query: "#{query}"
              #     StatusCode: "HTTP_301"


  TargetGroup1:
      Type: AWS::ElasticLoadBalancingV2::TargetGroup
      Properties:
          Name: "target-group-v1"
          TargetType: "instance"
          Port: 80
          Protocol: "HTTP"
          VpcId: !Ref VPC
          HealthCheckEnabled: true
          HealthCheckIntervalSeconds: 30
          HealthCheckPath: "/"
          HealthCheckPort: "traffic-port"
          HealthCheckProtocol: "HTTP"
          HealthCheckTimeoutSeconds: 5
          HealthyThresholdCount: 5
          UnhealthyThresholdCount: 2
          Matcher:
              HttpCode: "200"

  LaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      LaunchConfigurationName: CwRUMLaunchConfiguration
      InstanceType: t3.micro
      ImageId: ami-002bdd7c407eb4d47 
      KeyName: !Ref Keypair
      SecurityGroups:
        - !Ref SecurityGroup
        #- !GetAtt SecurityGroup.GroupId
      UserData:
        Fn::Base64: |
          #!/bin/bash -xe
          cd /
          sudo yum update -y
          sudo yum install -y httpd
          sudo service httpd start
          sudo service httpd restart


  ASG:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: CWRUMASG
      DesiredCapacity: 2
      MaxSize: 5
      MinSize: 2
      LaunchConfigurationName: !Ref LaunchConfig
      VPCZoneIdentifier:
        - !Ref PublicSubnet1
        - !Ref PublicSubnet2
      #AvailabilityZones: us-east-1a
      TargetGroupARNs:
        - !Ref TargetGroup1

  Scaling:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AutoScalingGroupName: !Ref ASG
      PolicyType: TargetTrackingScaling
      TargetTrackingConfiguration:
        PredefinedMetricSpecification:
          PredefinedMetricType: ASGAverageCPUUtilization
        TargetValue: 50.0


  CWRumIdentityPool:
    Type: AWS::Cognito::IdentityPool
    Properties: 
        IdentityPoolName: !Ref ApplicationName
        AllowUnauthenticatedIdentities: true

  CWRumIdentityPoolRoles:
    Type: AWS::Cognito::IdentityPoolRoleAttachment
    Properties:
      IdentityPoolId: !Ref CWRumIdentityPool
      Roles:
        unauthenticated: !GetAtt CWRumClientRole.Arn

  CWRumClientRole:
                    Type: AWS::IAM::Role
                    Properties:
                      AssumeRolePolicyDocument:
                        Version: 2012-10-17
                        Statement:
                          - Effect: Allow
                            Principal:
                              Federated:
                                - cognito-identity.amazonaws.com
                            Action:
                              - sts:AssumeRoleWithWebIdentity
                            Condition:
                              StringEquals:
                                cognito-identity.amazonaws.com:aud: !Ref CWRumIdentityPool
                              ForAnyValue:StringLike: 
                                cognito-identity.amazonaws.com:amr: unauthenticated
                      Description: Unauthenticated Role for AWS RUM Clients
                      Path: /
                      Policies:
                        - PolicyName: AWSRumClientPut
                          PolicyDocument:
                            Version: "2012-10-17"
                            Statement:
                              - Effect: Allow
                                Action:
                                  - "rum:PutRumEvents"
                                Resource: !Sub arn:aws:rum:${AWS::Region}:${AWS::AccountId}:appmonitor/${ApplicationName}
  CWRumAppMonitor:
        Type: AWS::RUM::AppMonitor
        Properties: 
          AppMonitorConfiguration: 
            AllowCookies: true
            EnableXRay: false
            SessionSampleRate: 1
            Telemetries:
              - errors
              - performance
              - http 

          CwLogEnabled: true
          Domain: !Ref DomainName
          Name: !Ref ApplicationName
#Tags: 
# Key: "Name"
#Value: "CloudWatchRUMdemo"    
  
# CLOUDFRONT DISTRIBUTION
  CloudFrontDistribution:
    Type: 'AWS::CloudFront::Distribution'
    DependsOn:
    - LoggingBucket
    Properties:
      DistributionConfig:
        Comment: 'Cloudfront Distribution pointing ALB Origin'
        Origins:
          - DomainName: !GetAtt 'OriginALB.DNSName'
            Id: !Ref 'OriginALB'
            CustomOriginConfig:
              HTTPPort: '80'
              HTTPSPort: '443'
              OriginProtocolPolicy: !Ref 'OriginProtocolPolicy'
              OriginKeepaliveTimeout: !Ref 'OriginKeepaliveTimeout'
              OriginReadTimeout: !Ref 'OriginReadTimeout'
              OriginSSLProtocols:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - SSLv3
        Enabled: true
        HttpVersion: 'http2'
        Aliases:
        - !Ref 'DomainName'
        DefaultCacheBehavior:
          AllowedMethods:
            - GET
            - HEAD
            - DELETE
            - OPTIONS
            - PATCH
            - POST
            - PUT
          Compress: !Ref 'Compress'
          DefaultTTL: !Ref 'DefaultTTL'
          MaxTTL: !Ref 'MaxTTL'
          MinTTL: !Ref 'MinTTL'
          SmoothStreaming: 'false'
          TargetOriginId: !Ref 'OriginALB'
          ForwardedValues:
            QueryString: !Ref 'QueryString'
            Cookies:
              Forward: !Ref 'ForwardCookies'
          ViewerProtocolPolicy: !Ref 'ViewerProtocolPolicy'
        PriceClass: !Ref 'PriceClass'
        # ViewerCertificate:
        #     ACMCertificateIdentifier: !Sub 'arn:aws:acm:${AWS::Region}:${AWS::AccountId}:certificate/${ACMCertificateIdentifier}'
        #     SslSupportMethod:  !Ref 'SslSupportMethod'
        #     MinimumProtocolVersion: !Ref 'MinimumProtocolVersion'
        Logging:
            Bucket: !Sub '${LoggingBucket}.s3.amazonaws.com'

Outputs:
  # EC2DNSName:
  #   Description: The domain name of the EC2 origin
  #   Value: !GetAtt Instance.PublicDnsName

  TargetGroup1:
    Description: The created TargetGroup 1
    Value: !Ref TargetGroup1

  SecurityGroup:
    Description: The securty group
    Value: !Ref SecurityGroup
  CWRumAppMonitor:
      Description: The Cloud Watch RUM App Monitor Name
      Value: !Ref CWRumAppMonitor
  CloudFrontEndpoint:
    Description: "Endpoint for Cloudfront Distribution"
    Value:       !Ref 'CloudFrontDistribution'
    Export:
      Name:      !Sub '${ApplicationName}-${Environment}-cloudfront-distribution'

  LoggingBucket:
    Description: "Name of S3 Logging bucket"
    Value:       !Ref 'LoggingBucket'
    Export:
      Name:      !Sub '${ApplicationName}-logging-${Environment}-${AWS::AccountId}-${AWS::Region}'

  LoggingBucketKMSKey:
    Description:  "Logging Bucket KMS Key"
    Value:        !Ref 'LoggingBucketKMSKey'
    Export:
      Name:       !Sub '${ApplicationName}-${Environment}-s3-logging-kms'
  OriginALB:
    Description: "The URL of the Origin ALB"
    Value:       !GetAtt 'OriginALB.DNSName'
    Export:
      Name:      !Sub '${ApplicationName}-${Environment}-origin-alb-dns'
